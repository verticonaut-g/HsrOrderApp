<?xml version="1.0" encoding="utf-8"?>
  <configuration>
    <configSections>
      <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    </configSections>
    <unity>
      <typeAliases>
        <typeAlias alias="string" type="System.String, mscorlib" />
        <typeAlias alias="EntityFrameworkDataContext" type="HsrOrderApp.DAL.Providers.EntityFramework.HsrOrderAppEntities, HsrOrderApp.DAL.Providers.EntityFramework" />
        <typeAlias alias="Linq2SQLDataContext" type="HsrOrderApp.DAL.Providers.LinqToSql.HsrOrderAppDataContext, HsrOrderApp.DAL.Providers.LinqToSql" />

        <!-- Order -->
        <typeAlias alias="IOrderRepository" type="HsrOrderApp.DAL.Data.Repositories.IOrderRepository, HsrOrderApp.DAL" />
        <typeAlias alias="EntityFrameworkOrderRepository" type="HsrOrderApp.DAL.Providers.EntityFramework.Repositories.OrderRepository, HsrOrderApp.DAL.Providers.EntityFramework" />
        <typeAlias alias="Linq2SQLOrderRepository" type=" HsrOrderApp.DAL.Providers.LinqToSql.Repositories.OrderRepository, HsrOrderApp.DAL.Providers.LinqToSql" />
        <typeAlias alias="OrderBusinessComponent" type="HsrOrderApp.BL.BusinessComponents.OrderBusinessComponent,HsrOrderApp.BL.BusinessComponents" />

        <!-- Customer -->
        <typeAlias alias="ICustomerRepository" type="HsrOrderApp.DAL.Data.Repositories.ICustomerRepository, HsrOrderApp.DAL" />
        <typeAlias alias="EntityFrameworkCustomerRepository" type="HsrOrderApp.DAL.Providers.EntityFramework.Repositories.CustomerRepository, HsrOrderApp.DAL.Providers.EntityFramework" />
        <typeAlias alias="Linq2SQLCustomerRepository" type=" HsrOrderApp.DAL.Providers.LinqToSql.Repositories.CustomerRepository, HsrOrderApp.DAL.Providers.LinqToSql" />
        <typeAlias alias="CustomerBusinessComponent" type="HsrOrderApp.BL.BusinessComponents.CustomerBusinessComponent,HsrOrderApp.BL.BusinessComponents" />

        <!-- Product -->
        <typeAlias alias="IProductRepository" type="HsrOrderApp.DAL.Data.Repositories.IProductRepository, HsrOrderApp.DAL" />
        <typeAlias alias="EntityFrameworkProductRepository" type="HsrOrderApp.DAL.Providers.EntityFramework.Repositories.ProductRepository, HsrOrderApp.DAL.Providers.EntityFramework" />
        <typeAlias alias="Linq2SQLProductRepository" type=" HsrOrderApp.DAL.Providers.LinqToSql.Repositories.ProductRepository, HsrOrderApp.DAL.Providers.LinqToSql" />
        <typeAlias alias="ProductBusinessComponent" type="HsrOrderApp.BL.BusinessComponents.ProductBusinessComponent,HsrOrderApp.BL.BusinessComponents" />

        <!-- Supplier -->
        <typeAlias alias="ISupplierRepository" type="HsrOrderApp.DAL.Data.Repositories.ISupplierRepository, HsrOrderApp.DAL" />
        <typeAlias alias="EntityFrameworkSupplierRepository" type="HsrOrderApp.DAL.Providers.EntityFramework.Repositories.SupplierRepository, HsrOrderApp.DAL.Providers.EntityFramework" />
        <typeAlias alias="Linq2SQLProductRepository" type="HsrOrderApp.DAL.Providers.LinqToSql.Repositories.ProductRepository, HsrOrderApp.DAL.Providers.LinqToSql" />
        <typeAlias alias="SupplierBusinessComponent" type="HsrOrderApp.BL.BusinessComponents.SupplierBusinessComponent,HsrOrderApp.BL.BusinessComponents" />

        <!-- Security -->
        <typeAlias alias="ISecurityRepository" type="HsrOrderApp.DAL.Data.Repositories.ISecurityRepository, HsrOrderApp.DAL" />
        <typeAlias alias="EntityFrameworkSecurityRepository" type="HsrOrderApp.DAL.Providers.EntityFramework.Repositories.SecurityRepository, HsrOrderApp.DAL.Providers.EntityFramework" />
        <typeAlias alias="Linq2SQLSecurityRepository" type=" HsrOrderApp.DAL.Providers.LinqToSql.Repositories.SecurityRepository, HsrOrderApp.DAL.Providers.LinqToSql" />
        <typeAlias alias="SecurityBusinessComponent" type="HsrOrderApp.BL.BusinessComponents.SecurityBusinessComponent,HsrOrderApp.BL.BusinessComponents" />

      </typeAliases>
      <containers>
        <!-- Entity Framework -->
        <container name="EntityFramework">
          <types>
            <type name="EFDataContext" type="EntityFrameworkDataContext">
              <typeConfig>
                <constructor>
                  <param name="connectionString" parameterType="string">
                    <value value="metadata=res://*/HsrOrderApp.csdl|res://*/HsrOrderApp.ssdl|res://*/HsrOrderApp.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=localhost;Initial Catalog=HsrOrderApp;Integrated Security=True;MultipleActiveResultSets=True&quot;"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>

            <!-- Order -->
            <type name="EFOrderRep" type="IOrderRepository" mapTo="EntityFrameworkOrderRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="EntityFrameworkDataContext">
                    <dependency name="EFDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="OrderBusinessComponent" mapTo="OrderBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="IOrderRepository">
                    <dependency name="EFOrderRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <!-- Customer -->
            <type name="EFCustomerRep" type="ICustomerRepository" mapTo="EntityFrameworkCustomerRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="EntityFrameworkDataContext">
                    <dependency name="EFDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="CustomerBusinessComponent" mapTo="CustomerBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="ICustomerRepository">
                    <dependency name="EFCustomerRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <!-- Product -->
            <type name="EFProductRep" type="IProductRepository" mapTo="EntityFrameworkProductRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="EntityFrameworkDataContext">
                    <dependency name="EFDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="ProductBusinessComponent" mapTo="ProductBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="IProductRepository">
                    <dependency name="EFProductRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <!-- Supplier -->
            <type name="EFSupplierRep" type="ISupplierRepository" mapTo="EntityFrameworkSupplierRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="EntityFrameworkDataContext">
                    <dependency name="EFDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="SupplierBusinessComponent" mapTo="SupplierBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="ISupplierRepository">
                    <dependency name="EFSupplierRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <!-- Security -->
            <type name="EFSecurityRep" type="ISecurityRepository" mapTo="EntityFrameworkSecurityRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="EntityFrameworkDataContext">
                    <dependency name="EFDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="SecurityBusinessComponent" mapTo="SecurityBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="ISecurityRepository">
                    <dependency name="EFSecurityRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
           </types>
        </container>
        <!-- Linq2SQL-->
        <container name="LINQ2SQL">
          <types>
            <type name="L2SDataContext" type="Linq2SQLDataContext">
              <typeConfig>
                <constructor>
                  <param name="connection" parameterType="string">
                    <value value="Data Source=localhost;Initial Catalog=HsrOrderApp;Integrated Security=True;MultipleActiveResultSets=True"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <!-- Order -->
            <type name="Linq2SQLOrderRep" type="IOrderRepository" mapTo="Linq2SQLOrderRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="Linq2SQLDataContext">
                    <dependency name="L2SDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="OrderBusinessComponent" mapTo="OrderBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="IOrderRepository">
                    <dependency name="Linq2SQLOrderRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <!-- Customer -->
            <type name="Linq2SQLCustomerRep" type="ICustomerRepository" mapTo="Linq2SQLCustomerRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="Linq2SQLDataContext">
                    <dependency name="L2SDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="CustomerBusinessComponent" mapTo="CustomerBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="ICustomerRepository">
                    <dependency name="Linq2SQLCustomerRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <!-- Product -->
            <type name="Linq2SQLProductRep" type="IProductRepository" mapTo="Linq2SQLProductRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="Linq2SQLDataContext">
                    <dependency name="L2SDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="ProductBusinessComponent" mapTo="ProductBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="IProductRepository">
                    <dependency name="Linq2SQLProductRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <!-- Security -->
            <type name="Linq2SQLSecurityRep" type="ISecurityRepository" mapTo="Linq2SQLSecurityRepository">
              <typeConfig>
                <constructor>
                  <param name="db" parameterType="Linq2SQLDataContext">
                    <dependency name="L2SDataContext"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>
            <type type="SecurityBusinessComponent" mapTo="SecurityBusinessComponent">
              <typeConfig>
                <constructor>
                  <param name="unitOfWork" parameterType="ISecurityRepository">
                    <dependency name="Linq2SQLSecurityRep"/>
                  </param>
                </constructor>
              </typeConfig>
            </type>            
          </types>
        </container>
      </containers>
    </unity>
</configuration>